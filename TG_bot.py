import telebot

import Time_manager
import markups
from lead import Lead
import ChannelManager
import database
import Lot_order


class TgBot:

    @staticmethod
    def start_bot(key):
        bot = telebot.TeleBot(key)
        admin_menu = markups.get_main_menu_admin()
        main_menu = markups.get_main_menu_markup()
        back_to_main_menu_markup = markups.get_back_to_main_menu_markup()

        sql_connection = database.sql_connection()
        cursor = sql_connection.cursor()
        database.create_table_lots(sql_connection, cursor)

        @bot.message_handler(content_types=['text'])
        def start(message):

            lot_id = message.text.replace("/start ", '')
            if message.text == "/start " + lot_id:
                print(lot_id)
                lead = database.get_lead_from_db(lot_id)
                ChannelManager.send_lot_to_bot(bot, lead, message)

            if message.text == '/admin':
                bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω –º–µ–Ω—é', reply_markup=admin_menu)

            if message.text == '/start':
                bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ *–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞* –£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤!',
                                 reply_markup=main_menu)

        @bot.callback_query_handler(func=lambda call: True)
        def query_handler(call):

            chat_id = call.message.chat.id
            data = call.data
            flag = data[0]
            if data == 'make_lead':
                lead = Lead()
                Lot_order.get_lead_name(chat_id, lead, bot)

            if data == 'my_aucc':
                bot.delete_message(chat_id, call.message.id)
                bot.send_message(chat_id, '–ó–∞–≥–ª—É—à–∫–∞ –º–æ–∏—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤:', reply_markup=back_to_main_menu_markup)

            if data == 'rules':
                bot.delete_message(chat_id, call.message.id)
                bot.send_message(chat_id, '''–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤,–ø–æ–±–µ–¥–∏—Ç–µ–ª—å –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –¥–æ–ª–∂–µ–Ω—ã –≤—ã–π—Ç–∏ –Ω–∞ —Å–≤—è–∑—å –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫‚ÄºÔ∏è
–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–±—è–∑–∞–Ω –≤—ã–∫—É–ø–∏—Ç—å –ª–æ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ –¢–†–Å–• –¥–Ω–µ–π,–ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞ üî•
–ò –ø—Ä–æ—á–∏–µ –ø—Ä–∞–≤–∏–ª–∞. –ê–±–æ–±–∞.''', reply_markup=back_to_main_menu_markup)

            if data == 'statistics':
                bot.delete_message(chat_id, call.message.id)
                bot.send_message(chat_id, '–ó–∞–≥–ª—É—à–∫–∞ –≥—Ä–∞—Ñ—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', reply_markup=back_to_main_menu_markup)

            if data == 'help':
                bot.delete_message(chat_id, call.message.id)
                bot.send_message(chat_id,
                                 '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã @JeanS_So_TighT.\n –£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ –∏ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!',
                                 reply_markup=back_to_main_menu_markup)

            if data == 'fuckgoback':
                bot.delete_message(chat_id, call.message.id)
                bot.send_message(chat_id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ *–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞* –£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤!',
                                 reply_markup=main_menu)

            if data == 'info':
                bot.answer_callback_query(call.id,
                                          text='''–î–µ–ª–∞—è —Å—Ç–∞–≤–∫—É —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–∫—É–ø–∏—Ç—å –ª–æ—Ç, 
–≤ —Å–ª—É—á–∞–µ –Ω–µ–≤—ã–∫—É–ø–∞ –ª–æ—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ–±–µ—Ç –≤ –∂–æ–ø—É –≥—Ä—É–∑–∏–Ω!''',
                                          show_alert=True)
            if flag == 'T':
                lead_id = data[1:]
                end_time = Time_manager.get_time_until_auction_end(lead_id)
                if end_time is None:
                    bot.answer_callback_query(call.id, "–ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω", show_alert=False)
                else:
                    bot.answer_callback_query(call.id, f"–î–æ –∫–æ–Ω—Ü–∞ –∞—É–∫—Ü–∏–æ–Ω–∞ {end_time}", show_alert=False)


        print("Ready")
        bot.infinity_polling()
